---
import { t, translatePath } from "@utils/i18n";
import Navigation from "@components/Header/Navigation.astro";
import MobileMenu from "@components/Header/MobileMenu.astro";
import Logo from "@assets/meta/logo.svg";
import IconThemeLight from "@assets/icons/icon-dark-light.svg";
import IconThemeDark from "@assets/icons/icon-dark-light-white.svg";
import { LanguageSelector } from "astro-i18next/components";
---

<header
    class="main-header mx-auto w-full flex justify-center py-2 z-50 relative dark:bg-primary-dark-0"
>
    <div
        class="container mx-auto flex justify-between items-center relative px-4"
    >
        <h1>
            <a href={translatePath("/")}>
                <Logo class="flex-shrink-0 relative inline-block h-9" />
            </a>
        </h1>
        <Navigation />
        <!-- @@include('navigation.html') -->
        <div
            class="flex justify-end align-middle content-center items-center relative gap-4"
        >
            <LanguageSelector
                showFlag={true}
                class="relative cursor-pointer z-20"
            />

            <div class="dark-light cursor-pointer flex relative z-20">
                <IconThemeLight class="dark:hidden" />
                <IconThemeDark class="hidden dark:inline-block" />
            </div>

            <div class="py-4 hover-up xl:flex hidden relative z-20">
                <a
                    role="button"
                    class="btn-primary"
                    href={translatePath("/accounts/signin")}
                >
                    Sign in
                </a>
            </div>
            <button class="navbar-burger self-center xl:hidden">
                <svg
                    class="fill-neutral-950 dark:fill-neutral-dark-950"
                    id="fi_2976215"
                    enable-background="new 0 0 464.205 464.205"
                    height="26"
                    viewBox="0 0 464.205 464.205"
                    width="26"
                    xmlns="http://www.w3.org/2000/svg"
                    ><g
                        ><g id="grip-solid-horizontal_1_"
                            ><path
                                d="m435.192 406.18h-406.179c-16.024 0-29.013-12.99-29.013-29.013s12.989-29.013 29.013-29.013h406.18c16.023 0 29.013 12.99 29.013 29.013-.001 16.023-12.99 29.013-29.014 29.013z"
                            ></path><path
                                d="m435.192 261.115h-406.179c-16.024 0-29.013-12.989-29.013-29.012s12.989-29.013 29.013-29.013h406.18c16.023 0 29.013 12.989 29.013 29.013s-12.99 29.012-29.014 29.012z"
                            ></path><path
                                d="m435.192 116.051h-406.179c-16.024 0-29.013-12.989-29.013-29.013s12.989-29.013 29.013-29.013h406.18c16.023 0 29.013 12.989 29.013 29.013s-12.99 29.013-29.014 29.013z"
                            ></path></g
                        ></g
                    ></svg
                >
            </button>
        </div>
        <MobileMenu />
        <!-- @@include('mobile-menu.html') -->
    </div>
</header>
<div
    class="header-bg absolute top-0 left-0 right-0 -z-50 w-full h-[1100px] bg-gradient-to-b from-primary-light-950/15 to-transparent max-h-[1100px] overflow-hidden"
>
</div>

<!-- Theme toggle -->
<script is:inline>
    document.addEventListener("DOMContentLoaded", (event) => {
        // Check if there's a mode stored in localStorage
        const savedMode = localStorage.getItem("mode");

        // Apply the saved mode or default to system preference
        if (savedMode) {
            if (savedMode === "dark") {
                toggleDarkMode();
            } else {
                toggleLightMode();
            }
        } else if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
            toggleDarkMode();
        } else {
            toggleLightMode();
        }

        // Handle dark/light mode toggle
        document
            .querySelector(".dark-light")
            .addEventListener("click", function () {
                if (document.documentElement.classList.contains("dark")) {
                    toggleLightMode();
                } else {
                    toggleDarkMode();
                }
            });

        // Function to toggle to dark mode
        function toggleDarkMode() {
            document.documentElement.classList.remove("light");
            document.documentElement.classList.add("dark");
            localStorage.setItem("mode", "dark");
        }

        // Function to toggle to light mode
        function toggleLightMode() {
            document.documentElement.classList.remove("dark");
            document.documentElement.classList.add("light");
            localStorage.setItem("mode", "light");
        }
    });
</script>
